import { BaseOutputParser } from "./base.js";
export type SerializedRegexParser = {
    _type: "regex_parser";
    regex: string;
    output_keys: string[];
    default_output_key?: string;
};
/**
 * Class to parse the output of an LLM call into a dictionary.
 * @augments BaseOutputParser
 */
export declare class RegexParser extends BaseOutputParser {
    regex: string | RegExp;
    outputKeys: string[];
    defaultOutputKey?: string;
    constructor(regex: string | RegExp, outputKeys: string[], defaultOutputKey?: string);
    _type(): string;
    parse(text: string): Record<string, string>;
    getFormatInstructions(): string;
    serialize(): {
        _type: "regex_parser";
        regex: string;
        output_keys: string[];
        default_output_key: string | undefined;
    };
    static deserialize(data: SerializedRegexParser): Promise<RegexParser>;
}
